<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.prime.com.tr/ui"
	template="/WEB-INF/layouts/standard.xhtml">

<ui:define name="title"></ui:define>

<ui:define name="notes">
	<p>
		Note that in "development" mode you can make changes to flow definitions without the 
		need to restart the server. The development mode is specified in 
		<span class="alt">src/main/webapp/WEB-INF/spring/appServlet/webflow.xml</span>.
	</p>
	<hr/>
</ui:define>

<ui:define name="content">

	<p:tabView activeIndex="${activeTabIndex}">

		<p:tab title="Ajax">
			<ul>
				<li>
					<h:outputLink value="ajax-jsf" >
						<h:outputText value="JSF 2 commandButton with f:ajax" />
					</h:outputLink><br/>
					<span class="alt">Ajax request and responses with h:commandButton + nested f:ajax tag.</span>
				</li>
				<li>
					<h:outputLink value="ajax-primefaces" >
						<h:outputText value="PrimeFaces commandButton" />
					</h:outputLink><br/>
					<span class="alt">Ajax request and response with the PrimeFaces commandButton.</span> 
				</li>
				<li>
					<h:outputLink value="ajax-render-action" >
						<h:outputText value="Web Flow render action" />
					</h:outputLink><br/>
					<span class="alt">Integration between the Web Flow render action and PrimeFaces partial rendering.</span> 
				</li>
				<li>
					<h:outputLink value="poller" >
						<h:outputText value="Polling" />
					</h:outputLink><br/>
					<span class="alt">Shows PrimeFaces poller component accesses server-side Web Flow data.</span> 
				</li>
			</ul>
		</p:tab>

		<p:tab title="Modal">
			<ul>
				<li>
					<h:outputLink value="modal-dialog-in-view" >
						<h:outputText value="Modal Dialog In View" />
					</h:outputLink><br/>
					<span class="alt">Display a modal dialog without leaving the current view state.</span> 
				</li>
			</ul>
		</p:tab>

		<p:tab title="Validation">
			<ul>
				<li>
					<h:outputLink value="validation-bean" >
						<h:outputText value="Bean Validation" />
					</h:outputLink><br/>
					<span class="alt">JSR-303 Bean Validation Annotations.</span> 
				</li>
				<li>
					<h:outputLink value="validation-model" >
						<h:outputText value="Model Validation" />
					</h:outputLink><br/>
					<span class="alt">Web Flow specific mechanism with validation methods in the model object.</span> 
				</li>
			</ul>
		</p:tab>

		<p:tab title="Spring Security">
			<h5>Comments: </h5>
			<p>
				The flow definitions on this tab are protected with Spring Security. Flow definitions contain the 
				<span class="alt">&lt;secured attributes="ROLE_USER" /&gt;</span> attribute, which raises 
				an <span class="alt">AccessDeniedException</span> if you're not logged in and redirects you to 
				the Login page. Use the Logout button on every flow to log out and log back in as a different 
				user with different permissions.
			</p>
			<ul>
				<li>
					<h:outputLink value="spring-security-taglib" >
						<h:outputText value="Spring Security Facelets Tag Library" />
					</h:outputLink><br/>
					<span class="alt">Demonstration of the authorize Facelets tag and Unified EL functions for Spring Security.</span> 
				</li>
			</ul>
		</p:tab>

		<p:tab title="TODO">
			<ul>
				<li>popup with form validation</li>
				<li>popup with multiple state transitions</li>
				<li>breadcrumb(http://forum.springsource.org/showthread.php?t=94207)</li>
				<li>custom jsf component</li>
				<li>jpa persistence</li>
				<li>file upload</li>
			</ul>
		</p:tab>
		
	</p:tabView>

</ui:define>
</ui:composition>
